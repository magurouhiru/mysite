@layer reset {
  :host ::ng-deep * {
    margin: 0;
    padding: 0;
    color: #333333;
  }
}

@property --max-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 1360px;
}

@property --padding-inline {
  syntax: "<length>";
  inherits: false;
  initial-value: 40px;
}

.body {
  position: relative;
  display: grid;
  height: 100%;
  grid-template:
    ". . ." 0
    ". h ." 80px
    ". . ." 0
    ". m ." 1fr
    ". . ." 0
    ". f ." 38px
    ". . ." 0 /
    0 1fr 0;
}

.item-container {
  width: min(var(--max-width), 100%);
  padding-inline: var(--padding-inline);
  margin-inline: auto;
}

.header {
  grid-area: h;
  position: fixed;
  width: 100%;
  height: 80px;
  & .item-container--header {
    height: 100%;
    display: flex;
    align-items: center;
    align-content: center;
  }
  & h1 {
    position: relative;
    width: 180px;
    height: 21px;
    margin-right: auto;
  }
  & .hamburger {
    position: relative;
    z-index: 100;
    width: 30px;
    height: 30px;
    cursor: pointer;
  }
  & .hamburger:before,
  .hamburger:after {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    top: 50%;
    left: 0;
    background-color: #333333;
    transition: transform 0.5s;
  }
  & .hamburger:before {
    transform: translateY(calc(-50% - 5px));
  }
  & .hamburger:after {
    transform: translateY(calc(-50% + 5px));
  }
  & .hamburger:has(input:checked):before {
    background-color: white;
    transform: translateY(calc(-50%)) rotate(-45deg);
  }
  & .hamburger:has(input:checked):after {
    background-color: white;
    transform: translateY(calc(-50%)) rotate(45deg);
  }
  & nav {
    position: fixed;
    z-index: 100;
    top: 36px;
    left: -100%;
    transition: left 1s;
    a {
      color: white;
      opacity: 0;
      font-size: 14px;
      text-decoration: none;
    }
  }
  & .link {
    display: flex;
    flex-direction: column;
    gap: 14px;
    list-style: none;
    transition: left 1s;
  }
  & .hamburger:has(input:checked) + nav {
    left: 50px;
    & a {
      opacity: 1;
    }
  }
  & .over-ray {
    display: none;
    position: fixed;
    width: 100%;
    height: 100%;
    inset: 0;
    background-color: #33333380;
  }
  & .hamburger:has(input:checked) + * + .over-ray {
    display: block;
  }
}

.main {
  grid-area: m;
}

.footer {
  grid-area: f;
  & .item-container--footer {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    font-size: 12px;
    row-gap: 5px;
  }
  & .link {
    display: flex;
    gap: 30px;
    font-size: 10px;
  }
}
